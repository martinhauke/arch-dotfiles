# This file has been auto-generated by i3-config-wizard(1).
# It will not be overwritten, so edit it as you like.
#
# Should you change your keyboard layout some time, delete
# this file and re-run i3-config-wizard(1).
#

# i3 config file (v4)
#
# Please see http://i3wm.org/docs/userguide.html for a complete reference!

# variables
set $WS1 1 
set $WS2 2 
set $WS3 3 
set $WS4 4 
set $WS5 5 
set $WS6 6 
set $WS7 7 
set $WS8 8 
set $WS9 9 

# vim like key bindings
set $left 	h
set $down 	j
set $up 	k
set $Right	l

set $mod Mod4

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font pango:hack 8

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
#font pango:DejaVu Sans Mono 8

# Before i3 v4.8, we used to recommend this one as the default:
# font -misc-fixed-medium-r-normal--13-120-75-75-C-70-iso10646-1
# The font above is very space-efficient, that is, it looks good, sharp and
# clear in small sizes. However, its unicode glyph coverage is limited, the old
# X core fonts rendering does not support right-to-left and this being a bitmap
# font, it doesn’t scale on retina/hidpi displays.

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
bindsym $mod+Return exec termite

# kill focused window
bindsym $mod+Shift+q kill

# start dmenu (a program launcher)
bindsym $mod+d exec rofi -show run -i -fg "#d8b0b0" -bg "#101030" -hlfg "#101030" -hlbg "#a0a0ff" -opacity 80
#bindsym $mod+d exec dmenu_run

# start window switcher
bindsym $mod+Tab exec rofi -show window -opacity 80

# bindsym $mod+d exec dmenu_run
# There also is the (new) i3-dmenu-desktop which only displays applications
# shipping a .desktop file. It is a wrapper around dmenu, so you need that
# installed.
# bindsym $mod+d exec --no-startup-id i3-dmenu-desktop

# change focus
bindsym $mod+$left focus left
bindsym $mod+$down focus down
bindsym $mod+$up focus up
bindsym $mod+$right focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+$left move left
bindsym $mod+Shift+$down move down
bindsym $mod+Shift+$up move up
bindsym $mod+Shift+$right move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# move entire workspace to another output
bindsym $mod+Control+e move workspace to output DP2
bindsym $mod+Control+i move workspace to output LVDS1
bindsym $mod+Control+t move workspace to output VGA1

# split in horizontal orientation
bindsym $mod+Control+h split h

# split in vertical orientation
bindsym $mod+Control+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+d focus child

# switch to workspace
bindsym $mod+1 workspace $WS1
bindsym $mod+2 workspace $WS2
bindsym $mod+3 workspace $WS3
bindsym $mod+4 workspace $WS4
bindsym $mod+5 workspace $WS5
bindsym $mod+6 workspace $WS6
bindsym $mod+7 workspace $WS7
bindsym $mod+8 workspace $WS8
bindsym $mod+9 workspace $WS9
bindsym $mod+0 workspace 10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace $WS1
bindsym $mod+Shift+2 move container to workspace $WS2
bindsym $mod+Shift+3 move container to workspace $WS3
bindsym $mod+Shift+4 move container to workspace $WS4
bindsym $mod+Shift+5 move container to workspace $WS5
bindsym $mod+Shift+6 move container to workspace $WS6
bindsym $mod+Shift+7 move container to workspace $WS7
bindsym $mod+Shift+8 move container to workspace $WS8
bindsym $mod+Shift+9 move container to workspace $WS9
bindsym $mod+Shift+0 move container to workspace 10

# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -b 'Yes, exit i3' 'i3-msg exit'"

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym $left resize shrink width 10 px or 10 ppt
        bindsym $down resize grow height 10 px or 10 ppt
        bindsym $up resize shrink height 10 px or 10 ppt
        bindsym $right resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape
        bindsym Return mode "default"
        bindsym Escape mode "default"
}

bindsym $mod+r mode "resize"

# Gaps

gaps inner 15

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
bar {
		font pango: hack 8
        status_command i3status -c ~/.config/i3/i3status.conf
        tray_output primary
		position	top

		colors {
			background	#263238
			statusline	#eceff1
			#			border			background		text
			focused_workspace	#eceff1			#eceff1			#37474f
			inactive_workspace	#37474f			#37474f			#eceff1
			active_workspace	#37474f			#eceff1			#37474f
			urgent_workspace	#ff9800			#ff9800			#37474f
		}
}

# custom keybindings

bindsym $mod+Shift+x exec lock
# Alsa/ Pulse Audio controls
bindsym XF86AudioRaiseVolume exec amixer -q set Master 1dB+ unmute
bindsym XF86AudioLowerVolume exec amixer -q set Master 1dB- unmute
bindsym XF86AudioMute exec amixer -q set Master toggle

# switch keyboard layout
bindsym $mod+Shift+d exec setxkbmap de
bindsym $mod+Shift+u exec setxkbmap us

# Scratchpad:
    # Make the currently focused window a scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the first scratchpad window
    bindsym $mod+minus scratchpad show

    # Show the sup-mail scratchpad window, if any.
    # bindsym mod4+s [title="^Sup ::"] scratchpad show

## Sreen brightness controls
# bindsym XF86MonBrightnessUp exec xbacklight -inc 20 # increase screen brightness
# bindsym XF86MonBrightnessDown exec xbacklight -dec 20 # decrease screen brightness

# Touchpad controls
# bindsym XF86TouchpadToggle exec ~/.scripts/toggletouchpad.sh # toggle touchpad

# Media player controls
bindsym XF86AudioPlay exec playerctl play
bindsym XF86AudioPause exec playerctl pause
bindsym XF86AudioNext exec playerctl next
bindsym XF86AudioPrev exec playerctl previous

# The middle button over a titlebar kills the window
bindsym --release button2 kill

# Modify gaps
bindsym $mod+Shift+g mode "$mode_gaps"

mode "$mode_gaps" {
        bindsym plus  gaps inner current plus 5
        bindsym minus gaps inner current minus 5
        bindsym 0     gaps inner current set 0

        bindsym Shift+plus  gaps inner all plus 5
        bindsym Shift+minus gaps inner all minus 5
        bindsym Shift+0     gaps inner all set 0

        bindsym Return mode "default"
        bindsym Escape mode "default"
}

# assign applications to specific workspaces
assign [class="^Termite$" instance="^task$"] $WS1
assign [class="^Termite$" instance="^newsbeuter$"] $WS1
assign [class="^Termite$" instance="^cortex$"] $WS1

assign [class="^Termite$" instance="^htop$"] $WS2
assign [class="^Termite$" instance="^terminal1$"] $WS2


# autostart
exec compton --config ~/.config/compton.conf -b
exec --no-startup-id nitrogen --restore

exec termite --name=newsbeuter -e newsbeuter
exec termite --name=cortex -e cortex
exec termite --name=task -e task

exec termite --name=htop -e htop
exec termite --name=terminal1
exec-always nm-applet
exec --no-startup-id dunst

## border settings

default_border pixel 1
default_floating_border pixel 1

## colour settings
# class					border	backgr.	text	indicator
#client.focused			#ffffff	#CBE6CB	#a01010	#00ff00
client.focused			#eceff1 #eceff1 #263238	#ff9800
client.focused_inactive	#eceff1 #37474f #eceff1 #009688
client.unfocused		#eceff1 #263238 #eceff1 #009688
